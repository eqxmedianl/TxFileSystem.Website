<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <RootNamespace>TxFileSystem.Website</RootNamespace>
    <AssemblyName>TxFileSystem.Website</AssemblyName>
    <Company>EQX Media B.V.</Company>
    <Authors>Jarno Kamminga</Authors>
    <Version>0.4.1</Version>
    <Copyright>(c) 2021 EQX Media B.V.</Copyright>
    <PackageProjectUrl>https://txfilesystem.io</PackageProjectUrl>
    <PackageLicenseFile>License.md</PackageLicenseFile>
    <RepositoryUrl>https://github.com/eqxmedianl/TxFileSystem.Website/</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageReleaseNotes># Release Notes

## Version 0.4.1

### Changes
* Styled menu items inside collapsed menu prettier.

### Fixes
* Contents fits better in small screen device viewports.

## Technical
* Added systemd service and service configuration.

## Version 0.4.0

### Changes
* Using Dark theme for Navigation and Footer.
* Navigation menu item of active page is highlighted now.

## Version 0.3.0

### Bugs
* Fixed About.md URL.
* Fixed incorrect license being displayed.
* Removed duplicated header.
* Fixed not every page having its own page title.

### Changes
* Updated project version number.
* Wrapping license in &lt;pre&gt;.
* Using flex layout to stick footer to the bottom.
* Made the footer more responsive (read; small screen friendly).
* Muted all footer text.
* Disabled browser suggestion to translate pages.

### Technical
* Restructured components.

## Version 0.2.0
* Modified how codeblocks from fetched Readme.md markdown are highlighted:
   * Now as per Microsoft Visual Studio syntax highlighter.
   * Added a React.Component for the Readme and increased spacing inside the rendered HTML.
* Improved responsive layout (for small screen browsers).
* Added footer to the project website, containing:
   * Copyright notice of EQX Media B.V.
   * Link to the GitHub repository of the project website.
* Restructured a lot under the hood:
   * Making more use of seperation of logic.
   * Use React.Component at more occassions.

## Version 0.1.0
* Minimal valuable version of project website:
   * Added Home page.
   * Added Install page.
* Displaying EQXMedia.TxFileSystem package info, using:
   * Web API being a middleware API for several NuGet API calls.</PackageReleaseNotes>
    <AssemblyVersion>0.4.1.0</AssemblyVersion>
    <FileVersion>0.4.1.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.2.0" />
    <PackageReference Include="NuGet.Client" Version="4.2.0" />
    <PackageReference Include="NuGet.Protocol" Version="5.9.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="ClientApp\src\components\Controls\PackageInstallCommands.css" />
    <None Remove="ClientApp\src\components\FetchedMarkDown.css" />
    <None Remove="ClientApp\src\components\FetchedMarkDown.js" />
    <None Remove="ClientApp\src\components\Layout\Footer.css" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\src\components\Controls\PackageInstallCommands.css" />
    <Content Include="ClientApp\src\components\Layout\Footer.css" />
    <Content Include="ClientApp\src\components\Layout\Footer.js" />
    <Content Include="ClientApp\src\components\Controls\FetchedMarkDown.css" />
    <Content Include="ClientApp\src\components\Controls\FetchedMarkDown.js" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Libraries\TxFileSystem.Website.Database\TxFileSystem.Website.Database.csproj" />
    <ProjectReference Include="..\Libraries\TxFileSystem.Website.NuGet\TxFileSystem.Website.NuGet.csproj" />
    <ProjectReference Include="..\Libraries\TxFileSystem.Website.Repositories\TxFileSystem.Website.Repositories.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
